uber_prompt() {

    git_color=$Green

    # PS1="$LIGHT_GRAY$*$WHITE$GREEN \$(parse_git_branch)$LIGHT_GRAY\$ "
    PS1="\[$IBlack\@\]"
    PS1+="\[$White\] \h "
    PS1+="\[$BWhite\]\w"
    PS1+="\[$git_color\]\$(__git_ps1)"
    PS1+="\[$White\]\$ "
    PS2='> '
    PS4='+ '


    # export PS1=$IBlack$Time12h$Color_Off'$(git branch &>/dev/null;\
    # if [ $? -eq 0 ]; then \
    #   echo "$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
    #   if [ "$?" -eq "0" ]; then \
    #     # @4 - Clean repository - nothing to commit
    #     echo "'$Green'"$(__git_ps1 " (%s)"); \
    #   else \
    #     # @5 - Changes to working tree
    #     echo "'$IRed'"$(__git_ps1 " {%s}"); \
    #   fi) '$BYellow$PathShort$Color_Off'\$ "; \
    # else \
    #   # @2 - Prompt when not in GIT repo
    #   echo " '$Yellow$PathShort$Color_Off'\$ "; \
    # fi)'

    #  SETUP CONSTANTS
    #  Bunch-o-predefined colors.  Makes reading code easier than escape sequences.

    # Reset
    local Color_Off="\[\033[0m\]"       # Text Reset

    # Regular Colors
    local Black="\[\033[0;30m\]"        # Black
    local Red="\[\033[0;31m\]"          # Red
    local Green="\[\033[0;32m\]"        # Green
    local Yellow="\[\033[0;33m\]"       # Yellow
    local Blue="\[\033[0;34m\]"         # Blue
    local Purple="\[\033[0;35m\]"       # Purple
    local Cyan="\[\033[0;36m\]"         # Cyan
    local White="\[\033[0;37m\]"        # White

    # Bold
    local BBlack="\[\033[1;30m\]"       # Black
    local BRed="\[\033[1;31m\]"         # Red
    local BGreen="\[\033[1;32m\]"       # Green
    local BYellow="\[\033[1;33m\]"      # Yellow
    local BBlue="\[\033[1;34m\]"        # Blue
    local BPurple="\[\033[1;35m\]"      # Purple
    local BCyan="\[\033[1;36m\]"        # Cyan
    local BWhite="\[\033[1;37m\]"       # White

    # Underline
    local UBlack="\[\033[4;30m\]"       # Black
    local URed="\[\033[4;31m\]"         # Red
    local UGreen="\[\033[4;32m\]"       # Green
    local UYellow="\[\033[4;33m\]"      # Yellow
    local UBlue="\[\033[4;34m\]"        # Blue
    local UPurple="\[\033[4;35m\]"      # Purple
    local UCyan="\[\033[4;36m\]"        # Cyan
    local UWhite="\[\033[4;37m\]"       # White

    # Background
    local Bg_Black="\[\033[40m\]"       # Black
    local Bg_Red="\[\033[41m\]"         # Red
    local Bg_Green="\[\033[42m\]"       # Green
    local Bg_Yellow="\[\033[43m\]"      # Yellow
    local Bg_Blue="\[\033[44m\]"        # Blue
    local Bg_Purple="\[\033[45m\]"      # Purple
    local Bg_Cyan="\[\033[46m\]"        # Cyan
    local Bg_White="\[\033[47m\]"       # White

    # High Intensty
    local IBlack="\[\033[0;90m\]"       # Black
    local IRed="\[\033[0;91m\]"         # Red
    local IGreen="\[\033[0;92m\]"       # Green
    local IYellow="\[\033[0;93m\]"      # Yellow
    local IBlue="\[\033[0;94m\]"        # Blue
    local IPurple="\[\033[0;95m\]"      # Purple
    local ICyan="\[\033[0;96m\]"        # Cyan
    local IWhite="\[\033[0;97m\]"       # White

    # Bold High Intensty
    local BIBlack="\[\033[1;90m\]"      # Black
    local BIRed="\[\033[1;91m\]"        # Red
    local BIGreen="\[\033[1;92m\]"      # Green
    local BIYellow="\[\033[1;93m\]"     # Yellow
    local BIBlue="\[\033[1;94m\]"       # Blue
    local BIPurple="\[\033[1;95m\]"     # Purple
    local BICyan="\[\033[1;96m\]"       # Cyan
    local BIWhite="\[\033[1;97m\]"      # White

    # High Intensty backgrounds
    local Bg_IBlack="\[\033[0;100m\]"   # Black
    local Bg_IRed="\[\033[0;101m\]"     # Red
    local Bg_IGreen="\[\033[0;102m\]"   # Green
    local Bg_IYellow="\[\033[0;103m\]"  # Yellow
    local Bg_IBlue="\[\033[0;104m\]"    # Blue
    local Bg_IPurple="\[\033[10;95m\]"  # Purple
    local Bg_ICyan="\[\033[0;106m\]"    # Cyan
    local Bg_IWhite="\[\033[0;107m\]"   # White


    # Various variables you might want for your PS1 prompt instead
    local Time12h="\T"
    local Time12a="\@"
    local PathShort="\w"
    local PathFull="\W"
    local NewLine="\n"
    local Hostname="\h"
    local Username="\u"
}


    ## the rest of the symbols for reference:

    # \a     an ASCII bell character (07)
    # \d     the date in "Weekday Month Date" format (e.g., "Tue May 26")
    # \D{format}
    #      the format is passed to strftime(3) and the result is inserted into the prompt string; an  empty  format
    #      results in a locale-specific time representation.  The braces are required
    # \e     an ASCII escape character (033)
    # \h     the hostname up to the first `.'
    # \H     the hostname
    # \j     the number of jobs currently managed by the shell
    # \l     the basename of the shell's terminal device name
    # \n     newline
    # \r     carriage return
    # \s     the name of the shell, the basename of $0 (the portion following the final slash)
    # \t     the current time in 24-hour HH:MM:SS format
    # \T     the current time in 12-hour HH:MM:SS format
    # \@     the current time in 12-hour am/pm format
    # \A     the current time in 24-hour HH:MM format
    # \u     the username of the current user
    # \v     the version of bash (e.g., 2.00)
    # \V     the release of bash, version + patch level (e.g., 2.00.0)
    # \w     the current working directory, with $HOME abbreviated with a tilde
    # \W     the basename of the current working directory, with $HOME abbreviated with a tilde
    # \!     the history number of this command
    # \#     the command number of this command
    # \$     if the effective UID is 0, a #, otherwise a $
    # \nnn   the character corresponding to the octal number nnn
    # \\     a backslash
    # \[     begin  a  sequence of non-printing characters, which could be used to embed a terminal control sequence
    #      into the prompt
    # \]     end a sequence of non-printing characters
